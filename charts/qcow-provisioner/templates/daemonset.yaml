apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-node-server
  labels:
    app.kubernetes.io/version: {{ .Chart.Version }}
{{ include "qcow.labels" . | indent 4 }}

spec:
  selector:
    matchLabels:
      name: {{ .Release.Name }}-node-server
{{ include "qcow.labels" . | indent 6 }}
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-node-server
{{ include "qcow.labels" . | indent 8 }}
    spec:
      hostNetwork: true
      serviceAccount: {{ .Release.Name }}
      containers:
        {{ if not .Values.dev }}
        - name: {{ .Release.Name }}-node
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command:
            - /init-node.sh
            - "{{ .Values.maxVolumesPerNode }}"
            - {{ .Values.kubeletPath }}
            - -bind=unix://{{ .Values.kubeletPath }}/plugins/qcow.csi.enix.io/csi.sock
            - -kubelet-path={{ .Values.kubeletPath }}
            - -v={{ .Values.verbosity }}
            - -port={{ .Values.ports.node }}
            - -ssh-port={{ .Values.ports.ssh }}
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_MODULE
          env:
            - name: QCOW_PROVISIONER_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: pods-dir
              mountPath: {{ .Values.kubeletPath }}/pods
              mountPropagation: Bidirectional
            - name: plugin-dir
              mountPath: {{ .Values.kubeletPath }}/plugins/qcow.csi.enix.io
            - name: kernel-modules
              mountPath: /lib/modules
            - name: devices
              mountPath: /dev
            - name: config
              mountPath: /init-node.sh
              subPath: init-node.sh
            - name: config
              mountPath: /copy-volume.sh
              subPath: copy-volume.sh
        {{ end }}
        - name: sshd
          image: linuxserver/openssh-server
          command: ["/init-sshd.sh", "{{ .Values.ports.ssh }}"]
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: PASSWORD_ACCESS
              value: "true"
            - name: USER_NAME
              value: kube
            - name: USER_PASSWORD_FILE
              value: /config/password
          volumeMounts:
            - name: config
              mountPath: /init-sshd.sh
              subPath: init-sshd.sh
            - name: plugin-dir
              mountPath: {{ .Values.kubeletPath }}/plugins/qcow.csi.enix.io
        - name: driver-registrar
          imagePullPolicy: IfNotPresent
          image: {{ .Values.csiNodeRegistrar.image.repository }}:{{ .Values.csiNodeRegistrar.image.tag }}
          args:
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path={{ .Values.kubeletPath }}/plugins/qcow.csi.enix.io/csi.sock
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/qcow.csi.enix.io /registration/qcow.csi.enix.io-reg.sock"]
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: liveness-probe
          image: {{ .Values.nodeLivenessProbe.image.repository }}:{{ .Values.nodeLivenessProbe.image.tag }}
          args:
            - --csi-address=/csi/csi.sock
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            periodSeconds: 60
      volumes:
        - name: pods-dir
          hostPath:
            path: {{ .Values.kubeletPath }}/pods/
        - name: registration-dir
          hostPath:
            path: {{ .Values.kubeletPath }}/plugins_registry/
        - name: plugin-dir
          hostPath:
            path: {{ .Values.kubeletPath }}/plugins/qcow.csi.enix.io
            type: DirectoryOrCreate
        - name: config
          configMap:
            name: config
            defaultMode: 0700
        - name: kernel-modules
          hostPath:
            path: /lib/modules
        - name: devices
          hostPath:
            path: /dev

